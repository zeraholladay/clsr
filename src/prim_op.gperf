%{
#include "core_def.h"
#include "eval.h"
#include "parser.h"
%}

%includes
%language=ANSI-C
%readonly-tables
%struct-type
%ignore-case
%define initializer-suffix ,{0,0,0}
%define slot-name name

struct _prim_op_gperf {
    const char *name;
    PrimOp op;
};

%%
APPLY,   { TOK_APPLY,   0,       apply  },
CLOSURE, { TOK_CLOSURE, 0,       0      },
CONS,    { TOK_CONS,    0,       cons   },
EVAL,    { TOK_EVAL,    eval,    0      },
FIRST,   { TOK_FIRST,   first,   0      },
LOOKUP,  { TOK_LOOKUP,  lookup,  0      },
QUOTE,   { TOK_QUOTE,   0,       0      },
REST,    { TOK_REST,    rest,    0      },
SET,     { TOK_SET,     0,       set    }
%%

const PrimOp * prim_op_lookup(register const char *str, register unsigned int len) {
    const struct _prim_op_gperf *_op = in_word_set(str, len);
    if (_op) {
        return &_op->op;
    } else {
        return 0;
    }
}
